name: comment-pr

on:
  workflow_run:
    workflows: ["pr-lint-verible"]
    types:
      - completed

jobs:
  Comment:
    name: Comment
    runs-on: ubuntu-18.04
    #if: ${{ github.event.workflow_run.event == 'pull_request' && github.event.workflow_run.conclusion == 'failure' }}
    steps:
      - name: 'Download artifact'
        uses: actions/github-script@v3.1.0
        with:
          script: |
            var artifacts = await github.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: ${{github.event.workflow_run.id }},
            });
            var matchArtifact = artifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "linter-log"
            })[0];
            var download = await github.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            var fs = require('fs');
            fs.writeFileSync('${{github.workspace}}/linter-log.zip', Buffer.from(download.data));
      - run: |
          unzip linter-log.zip
          cat ./verible-linter-output.txt
          cat ./issue_num
      - id: get-comment-body
        run: |
          body=$(cat ./verible-linter-output.txt)
          echo ::set-output name=body::$body
      - id: get-pr-number
        run: |
          num=$(cat ./issue_num)
          echo ::set-output name=num::$num
      - uses: reviewdog/action-setup@v1
        with:
          reviewdog_version: latest
      - name: Run reviewdog
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cat ./verible-linter-output.txt |
          reviewdog -efm="%f:%l:%c: %m" \
          -reporter=github-pr-review \
          -level="info" \
          -fail-on-error="false" \
          -filter-mode="nofilter"
      - name: Post comment
        uses: KeisukeYamashita/create-comment@v1
        with:
          number: ${{ steps.get-pr-number.outputs.num }}
          check-only-first-line: "true"
          unique: "true"
          token: ${{ secrets.GITHUB_TOKEN }}
          comment: ${{ steps.get-comment-body.outputs.body }}
